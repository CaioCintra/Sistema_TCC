generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Aluno {
  nome       String
  email      String
  ra         Int          @unique
  Banca      Banca[]
  Instancias Instancias[]
  TCC        TCC[]
}

model Professor {
  nome            String
  email           String
  departamento    String
  celular         String            @unique
  id              Int               @id @default(autoincrement())
  Banca_Professor Banca_Professor[]
}

model Workspace {
  id          Int     @id @default(autoincrement())
  periodo     String
  observacoes String
  Banca       Banca[]
  TCC         TCC[]
}

model WorkspaceAtivo {
  id    Int @id @default(autoincrement())
  tela  Int
  ativo Int
}

model TCC {
  id              Int       @id @default(autoincrement())
  workspace       Int
  ra              Int
  etapa           Etapas
  titulo          String?
  orientador_id   Int?
  coorientador_id Int?
  status          Status
  aluno_ra        Aluno     @relation(fields: [ra], references: [ra])
  workspace_id    Workspace @relation(fields: [workspace], references: [id])
}

model Banca {
  id                 Int       @id @default(autoincrement())
  TCC_etapa          Etapas
  data               DateTime
  local              String
  nota               String
  observacao         String
  ra                 Int
  status_confirmacao String
  workspace          Int
  aluno_ra           Aluno     @relation(fields: [ra], references: [ra])
  workspace_id       Workspace @relation(fields: [workspace], references: [id])
}

model Banca_Professor {
  id           Int       @id @default(autoincrement())
  professor    Int
  banca        Int
  Professor_id Professor @relation(fields: [professor], references: [id])
}

model Instancias {
  id              Int      @id @default(autoincrement())
  aluno           Int
  workspace       Int
  Etapa           Etapas
  orientador      Int
  status_processo String
  timestamp       DateTime
  aluno_ra        Aluno    @relation(fields: [aluno], references: [ra])
}

model Texto {
  nome     String    @unique
  tipo     TipoTexto
  conteudo String
}

model tokenAluno {
  ra    String @unique
  token String @unique
}

model Admin {
  login String @unique
  senha String @unique
}

enum Status {
  Matriculado_TCC1
  Orientador_Definido
  Banca_TCC1_Agendada
  Banca_TCC1_Confirmada
  Aprovado_TCC1
  Reprovado_TCC1
  Matriculado_TCC2
  Orientador_Definido_TCC2
  Banca_TCC2_Agendada
  Banca_TCC2_Confirmada
  Aprovado_TCC2
  Reprovado_TCC2
}

enum Etapas {
  TCC1
  TCC2
}

enum TipoTexto {
  Email
  Ata
  Declaracao
}
